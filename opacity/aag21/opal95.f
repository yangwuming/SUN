C THIS IS THE INTERPOLATION FACILITY FOR THE LIVERMORE OPACITY TABLES
C USING CUBIC SPLINE INTERPLOATION SCHEME.   (FOR OPAL95)
C --------------------------------------------------------------
C      SUBROUTINE YLL3D95(DL,TL,X,OF,OLF,QODF,QOTF)
C      SUBROUTINE YLL3D952(DL,TL,X,OF,OLF,QODF,QOTF)
C      SUBROUTINE YLL2D95(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C      SUBROUTINE YLL2D952(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C      SUBROUTINE LL95TBL(ZENV)    READ OPAL95
C      SUBROUTINE YLLOC95          SPLINE COEFF.
C      SUBROUTINE LL4TH95(XENV,ZENV) SURF.TABLE     
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     YLL3D95
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL3D95(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT95/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT95/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT495/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM95/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D95(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D95(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
C
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D951(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT951/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT951/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4951/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM951/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D951(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D951(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     YLL3D952
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL3D952(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
C DBG 12/95 SECOND Z COMMON BLOCKS
      COMMON /GLLOT952/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT952/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4952/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM952/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = LOG10(T)
      T6=TL
C     RHOT3 = LOG10(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
C
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
          M1=NUMXM+1
          LONE=.TRUE.
          GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
C DBG ALLOW EXTRAPOLATION
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2 = -M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE '
C         STOP 
C      END IF
C
      CALL YLL2D952(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D952(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
C
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D953(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT953/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT953/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4953/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM953/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D953(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D953(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D954(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT954/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT954/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4954/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM954/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D954(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D954(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D955(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT955/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT955/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4955/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM955/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D955(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D955(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D956(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT956/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT956/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4956/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM956/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D956(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D956(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D957(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT957/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT957/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4957/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM957/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D957(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D957(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D958(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT958/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT958/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4958/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM958/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D958(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D958(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D959(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT959/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT959/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4959/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM959/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D959(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D959(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
Ccccccccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE YLL3D950(DL,TL,X,OF,OLF,QODF,QOTF)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL LONE
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /GLLOT950/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT950/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4950/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /KIPM950/M1,M2,M3
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      DATA M1,M2,M3/1,1,1/
      LONE=.FALSE.
C
C     INDEPENDENT PARAMETER IN LIVERMORE OPACITY TABLE;
C     T6 = lOG(T)
      T6=TL
C     RHOT3 = LOG(RHO/(T/10E6)**3)
      RHOT3=DL-3.0D0*(T6-6.0D0)
      IF(DABS(XENV4-X).LE.1.0D-5)THEN
         M1=NUMXM+1
         LONE=.TRUE.
         GO TO 131
      ENDIF
      DO 130 IM1=1,NUMXM
      IF(DABS(GRIDX(IM1)-X).LE.1.0D-5)THEN
         M1=IM1
         LONE=.TRUE.
         GO TO 131
      ENDIF
  130 CONTINUE
C
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR IN X GRID'
         STOP 
      END IF
  131 CONTINUE
      CALL FINDEX(GRIDT,NUMTM,T6,M2)
C DBG ALLOW EXTRAPOLATION
      IF(M2.LT.0) M2=-M2
C      IF(M2.LT.0.AND.GRIDT(NUMTM).EQ.T6)M2=-M2
C      IF(M2.LT.0) THEN
C         WRITE(ISHORT, *)' OPAL95 ERROR OPACITY T OUT OF TABLE ',TL
C         STOP 
C      END IF
C
      CALL YLL2D950(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
      IF (LONE)THEN
C        USE ONLY ONE X TABLE
         OLF=OL0
         OF=O0
         QODI=QOD0
         QOTI=QOT0
      ELSE
C        LINEAR EXTRAPOLATION IN X
         CALL YLL2D950(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
         GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
         OLF=(OL1-OL0)*GRDNT+OL0
         QODI=(QOD1-QOD0)*GRDNT+QOD0
         QOTI=(QOT1-QOT0)*GRDNT+QOT0
         OF=10.0D0**OLF
      ENDIF
C     CONVERSION FROM THE DERIVERTIVE WITH CONSTANT RHOT3 TO CONSTANT RHO
      QODF=QODI
      QOTF=QOTI-3.0D0*QODF
      RETURN
      END
Ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     YLL2D95
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D95(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT95/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT95/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT495/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL95/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
      TOLOPAL95=0.d0
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D951(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT951/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT951/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4951/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL951/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     YLL2D952
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D952(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT952/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT952/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4952/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL952/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T.OR.XT(JT).LT.T) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP 
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D953(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT953/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT953/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4953/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL953/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D954(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT954/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT954/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4954/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL954/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D955(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT955/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT955/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4955/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL955/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D956(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT956/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT956/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4956/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL956/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D957(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT957/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT957/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4957/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL957/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D958(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT958/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT958/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4958/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL958/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D959(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT959/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT959/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4959/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL959/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLL2D950(T,D,M1,M2,M3,O,OL,QODF,QOTF)
C     TWO DIMENSIONAL INTERPOLATION FOR OPACITY
C     AND THE DERIVTIVES.
C     M1, M2, AND M3 ARE NEAREST GRID POINT OF ABUNDANCE, 
C     TEMPERATURE, AND DENSITY WE GOT AT 'GETD'.
C     O IS OPACITY.
C     OL IS DLOG(O)
C     QODF IS THE PARTIAL DERIVATIVE OF O WRT D.
C     QOTF IS THE PARTIAL DERIVATIVE OF O WRT T.
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
	COMMON /OPBOUNDS/TOLOPAL95,TOLALEX,LOPOUT,LOPOUT1
      COMMON /GLLOT950/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT950/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT4950/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /INTPL950/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      REAL*8 XT(NUMT),YTO(NUMT)
      REAL*8 AQOD(NUMT)
      INTEGER JT,IT,ITS,ITF
      LOGICAL*4 LMORE
      LMORE=.TRUE.
C     FOR SIX GRID POINTS OF TEMPERATURE
      ITS=M2-2
      IF(ITS.LE.0)ITS=1
      ITF=M2+3
      IF(ITF.GT.NUMTM)ITF=NUMTM
      IF(M1.LT.NUMXM+1)THEN
          MM1=M1
       ELSE
          MM1=KIPM1
      ENDIF
      JT=0
      DO 300 IT=ITS,ITF
        INDEX1=IT+(MM1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        CALL FINDEX(GRHOT3,NDF,D,M3)
        IF(M3.LT.0)THEN
C         OUT SIDE THEN  LINEAR EXTRAPOLATION
          M3=-M3
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
          ENDIF
          OL0=C2*DX+C1
          QODI=C2
c          print*,'OLO1=',OLO
        ELSE
C         IN SIDE THEN  SPLINE INTERPOLATION
          KNOT=M3-NDSS+1
          INDEX2=4*(KNOT-1)
          DX=D-GRHOT3(M3)
          IF(M1.LT.NUMXM+1)THEN
            C1=CFORD(INDEX1,INDEX2+1)
            C2=CFORD(INDEX1,INDEX2+2)
            C3=CFORD(INDEX1,INDEX2+3)
            C4=CFORD(INDEX1,INDEX2+4)
          ELSE
            C1=CFORD4(IT,INDEX2+1)
            C2=CFORD4(IT,INDEX2+2)
            C3=CFORD4(IT,INDEX2+3)
            C4=CFORD4(IT,INDEX2+4)
          ENDIF
C         INTERPOLATION FOR OPACITY(OL) IN THE ENTRY D AND THE EACH T-GRID
C         ESTIMATES THE PARTIAL DERIVATIVE OF OL WRT D
C         EVALUATES THE INTERPOLATION VALUE IN THE SUB-RANGE WE DETERMINED.
          OL0=((C4*DX+C3)*DX+C2)*DX+C1
          QODI=(3.0D0*C4*DX+2.0D0*C3)*DX+C2
c          print*,'OLO2=',OLO
        ENDIF
C
        JT=JT+1
        XT(JT)=GRIDT(IT)
        YTO(JT)=OL0
        AQOD(JT)=QODI
  300 CONTINUE
C DBG ALLOW EXTRAPOLATION
      IF(XT(1).GT.T+TOLOPAL95
     *   .OR.XT(JT).LT.T-TOLOPAL95) THEN
         WRITE(ISHORT, *)' OPAL95 ERROR: EXTRAPOLATION TOO FAR'
         STOP
      END IF
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     INTERPOLATION FOR THE OPACITY IN THE ENTRY T AND D.
C     GET THE PARTIAL DERIVATIVE OF OL WRT T.
      CALL INTPOL(XT,YTO,JT,T,OL00,QOTF)
      OL=OL00
      O=10.0D0**OL
C     QOTF = D LN(O)/D LN(T)
C     FIND THE PARTIAL DERIVATIVE VALUE OF OL WRT D IN THE GIVEN T AND D
      CALL INTPOL(XT,AQOD,JT,T,QODF,QODTI)
C     QODF = D LN(O)/D LN(D)
      QOTF1=QOTF-3.0D0*QODF
c      print*,'OL=',OL
      RETURN
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     LL95TBL
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE LL95TBL
C DBG 12/95 modified to read in opacity at two different Z
      IMPLICIT REAL*8 (A-H,O-Z)
      include 'dimens'
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMZ=13)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (CONST=11604.5)
      CHARACTER*80 FLIV95
      LOGICAL L2Z
      COMMON /LOPAL95/FLIV95,ILIV95
C GRID ENTRIES FOR TEMPERATURE, AND ABUNDANCE (X)
      COMMON /GLLOT95/TGR(NUMT),XXG(NUMX),R0GR(NUMD)
      COMMON /LLOT95/CAPPA(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /GLLOT951/TGR1(NUMT),XXG1(NUMX),R0GR1(NUMD)
      COMMON /LLOT951/CAPPA1(NUMXT,NUMD),NUMXM1,NUMTM1
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2, 
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      common/zpoint/zp(11),zpa(11),zinit
C  LOCAL ARRAY
      REAL*8 X(NUMD),XSTO(NUMD,NUMT),ZZG(NUMZ)
      CHARACTER*132 DUMMY
C
      DATA ZZG/0.0D0, 0.0001D0, 0.0003D0, 0.001D0, 0.002D0,
     +         0.004D0, 0.01D0, 0.02D0, 0.03D0,
     +         0.04D0, 0.06D0, 0.08D0, 0.10D0/
C
  1   FORMAT(A)
      NFMT=1

      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo

C
C     READ IN OPACITY AT ZOPAL951
      ZZ0=zp(1)
      DO 111 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 112
  111 CONTINUE
      IJ=NUMZ
  112 IZ0=IJ-1
      WRITE(ISHORT,114) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  114 FORMAT(' OPAL95: INTERPOLATE Z (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  119 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 119
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 1000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 119
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	 WRITE(ISHORT,*)' OPAL95: Z ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG(IOP)=XX
C
      READ(ILIV95,11,END=199) (R0GR(I),I=1,NUMD)
   11 FORMAT(///,4X,19F7.1,/)
      J=0
  188 READ(ILIV95,1,END=177)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
   12 FORMAT(F4.2,19F7.3)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 177
      J=J+1
      TGR(J)=T
      DO 113 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  113 CONTINUE
      GOTO 188
C
  177 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR '
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 101  READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 101
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR(I),I=1,NUMD)
      DO 189 J=1,JEND
      READ(ILIV95,1,END=107)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR(J))THEN
       WRITE(ISHORT,*)T,TGR(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 133 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  133 CONTINUE
  189 CONTINUE
C
  107 CONTINUE
      NUMTM=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C  SEARCH ANOTHER X TABLE
  139 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 139
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 199
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 199
      ELSE
         IF(XX.GT.0.95D0)GO TO 199
      END IF
      IF(XX.LE.XXG(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 139
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 1000
  199 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM=IOP
      NUMTM=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z = ',ZZ0
cccccccccccccccccccccccccccccccccccccccccccccccc
      ZZ0=zp(2)
      DO 211 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 212
  211 CONTINUE
      IJ=NUMZ
  212 IZ0=IJ-1
      WRITE(ISHORT,214) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  214 FORMAT(' OPAL95: INTERPOLATE Z2 (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  219 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 219
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 2000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 219
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	  WRITE(ISHORT,*)' OPAL95: Z2 ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG1(IOP)=XX
C
      READ(ILIV95,11,END=299) (R0GR1(I),I=1,NUMD)
      J=0
  288 READ(ILIV95,1,END=277)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 277
      J=J+1
      TGR1(J)=T
      DO 213 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  213 CONTINUE
      GOTO 288
C
  277 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR (Z2)'
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 201  READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 201
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG1(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG1(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR1(I),I=1,NUMD)
      DO 289 J=1,JEND
      READ(ILIV95,1,END=207)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR1(J))THEN
       WRITE(ISHORT,*)T,TGR1(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 233 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  233 CONTINUE
  289 CONTINUE
C
  207 CONTINUE
      NUMTM2=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA1(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C     SEARCH ANOTHER X TABLE
  239 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 239
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 299
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 299
      ELSE
         IF(XX.GT.0.95D0)GO TO 299
      END IF
      IF(XX.LE.XXG1(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 239
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 2000
  299 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM1=IOP
      NUMTM1=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z2 = ',ZZ0
      CALL YLLOC95
      RETURN
   99 CONTINUE
      WRITE(ISHORT, *)' OPAL95: ERROR IN FILE CLOSING'
      STOP 
      END
Ccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccc
      SUBROUTINE LL95TBL1
C DBG 12/95 modified to read in opacity at two different Z
      IMPLICIT REAL*8 (A-H,O-Z)
      include 'dimens'
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMZ=13)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (CONST=11604.5)
      CHARACTER*80 FLIV95
      LOGICAL L2Z
      COMMON /LOPAL95/FLIV95,ILIV95
C GRID ENTRIES FOR TEMPERATURE, AND ABUNDANCE (X)
      COMMON /GLLOT952/TGR(NUMT),XXG(NUMX),R0GR(NUMD)
      COMMON /LLOT952/CAPPA(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /GLLOT953/TGR1(NUMT),XXG1(NUMX),R0GR1(NUMD)
      COMMON /LLOT953/CAPPA1(NUMXT,NUMD),NUMXM1,NUMTM1
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,   
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      common/zpoint/zp(11),zpa(11),zinit
C  LOCAL ARRAY
      REAL*8 X(NUMD),XSTO(NUMD,NUMT),ZZG(NUMZ)
      CHARACTER*132 DUMMY
C
      DATA ZZG/0.0D0, 0.0001D0, 0.0003D0, 0.001D0, 0.002D0,
     +         0.004D0, 0.01D0, 0.02D0, 0.03D0,
     +         0.04D0, 0.06D0, 0.08D0, 0.10D0/
C
  1   FORMAT(A)
      NFMT=1
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
C
C     READ IN OPACITY AT ZOPAL951
      ZZ0=zp(3)
      DO 111 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 112
  111 CONTINUE
      IJ=NUMZ
  112 IZ0=IJ-1
      WRITE(ISHORT,114) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  114 FORMAT(' OPAL95: INTERPOLATE Z (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  119 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 119
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 1000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 119
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	 WRITE(ISHORT,*)' OPAL95: Z ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG(IOP)=XX
C
      READ(ILIV95,11,END=199) (R0GR(I),I=1,NUMD)
   11 FORMAT(///,4X,19F7.1,/)
      J=0
  188 READ(ILIV95,1,END=177)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
   12 FORMAT(F4.2,19F7.3)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 177
      J=J+1
      TGR(J)=T
      DO 113 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  113 CONTINUE
      GOTO 188
C
  177 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR '
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 101  READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 101
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR(I),I=1,NUMD)
      DO 189 J=1,JEND
      READ(ILIV95,1,END=107)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR(J))THEN
       WRITE(ISHORT,*)T,TGR(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 133 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  133 CONTINUE
  189 CONTINUE
C
  107 CONTINUE
      NUMTM=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C  SEARCH ANOTHER X TABLE
  139 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 139
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 199
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 199
      ELSE
         IF(XX.GT.0.95D0)GO TO 199
      END IF
      IF(XX.LE.XXG(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 139
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 1000
  199 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM=IOP
      NUMTM=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z = ',ZZ0
cccccccccccccccccccccccccccccccccccccccccccccccc
      ZZ0=zp(4)
      DO 211 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 212
  211 CONTINUE
      IJ=NUMZ
  212 IZ0=IJ-1
      WRITE(ISHORT,214) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  214 FORMAT(' OPAL95: INTERPOLATE Z2 (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  219 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 219
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 2000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 219
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	  WRITE(ISHORT,*)' OPAL95: Z2 ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG1(IOP)=XX
C
      READ(ILIV95,11,END=299) (R0GR1(I),I=1,NUMD)
      J=0
  288 READ(ILIV95,1,END=277)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 277
      J=J+1
      TGR1(J)=T
      DO 213 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  213 CONTINUE
      GOTO 288
C
  277 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR (Z2)'
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 201  READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 201
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG1(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG1(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR1(I),I=1,NUMD)
      DO 289 J=1,JEND
      READ(ILIV95,1,END=207)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR1(J))THEN
       WRITE(ISHORT,*)T,TGR1(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 233 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  233 CONTINUE
  289 CONTINUE
C
  207 CONTINUE
      NUMTM2=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA1(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C     SEARCH ANOTHER X TABLE
  239 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 239
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 299
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 299
      ELSE
         IF(XX.GT.0.95D0)GO TO 299
      END IF
      IF(XX.LE.XXG1(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 239
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 2000
  299 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM1=IOP
      NUMTM1=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z2 = ',ZZ0
      CALL YLLOC951
      RETURN
   99 CONTINUE
      WRITE(ISHORT, *)' OPAL95: ERROR IN FILE CLOSING'
      STOP 
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE LL95TBL2
C DBG 12/95 modified to read in opacity at two different Z
      IMPLICIT REAL*8 (A-H,O-Z)
      include 'dimens'
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMZ=13)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (CONST=11604.5)
      CHARACTER*80 FLIV95
      LOGICAL L2Z
      COMMON /LOPAL95/FLIV95,ILIV95
C GRID ENTRIES FOR TEMPERATURE, AND ABUNDANCE (X)
      COMMON /GLLOT954/TGR(NUMT),XXG(NUMX),R0GR(NUMD)
      COMMON /LLOT954/CAPPA(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /GLLOT955/TGR1(NUMT),XXG1(NUMX),R0GR1(NUMD)
      COMMON /LLOT955/CAPPA1(NUMXT,NUMD),NUMXM1,NUMTM1
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,   
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      common/zpoint/zp(11),zpa(11),zinit
C  LOCAL ARRAY
      REAL*8 X(NUMD),XSTO(NUMD,NUMT),ZZG(NUMZ)
      CHARACTER*132 DUMMY
C
      DATA ZZG/0.0D0, 0.0001D0, 0.0003D0, 0.001D0, 0.002D0,
     +         0.004D0, 0.01D0, 0.02D0, 0.03D0,
     +         0.04D0, 0.06D0, 0.08D0, 0.10D0/
C
  1   FORMAT(A)
      NFMT=1
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
C
C     READ IN OPACITY AT ZOPAL951
      ZZ0=zp(5)
      DO 111 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 112
  111 CONTINUE
      IJ=NUMZ
  112 IZ0=IJ-1
      WRITE(ISHORT,114) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  114 FORMAT(' OPAL95: INTERPOLATE Z (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  119 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 119
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 1000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 119
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	 WRITE(ISHORT,*)' OPAL95: Z ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG(IOP)=XX
C
      READ(ILIV95,11,END=199) (R0GR(I),I=1,NUMD)
   11 FORMAT(///,4X,19F7.1,/)
      J=0
  188 READ(ILIV95,1,END=177)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
   12 FORMAT(F4.2,19F7.3)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 177
      J=J+1
      TGR(J)=T
      DO 113 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  113 CONTINUE
      GOTO 188
C
  177 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR '
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 101  READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 101
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR(I),I=1,NUMD)
      DO 189 J=1,JEND
      READ(ILIV95,1,END=107)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR(J))THEN
       WRITE(ISHORT,*)T,TGR(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 133 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  133 CONTINUE
  189 CONTINUE
C
  107 CONTINUE
      NUMTM=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C  SEARCH ANOTHER X TABLE
  139 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 139
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 199
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 199
      ELSE
         IF(XX.GT.0.95D0)GO TO 199
      END IF
      IF(XX.LE.XXG(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 139
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 1000
  199 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM=IOP
      NUMTM=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z = ',ZZ0

      ZZ0=zp(6)
      DO 211 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 212
  211 CONTINUE
      IJ=NUMZ
  212 IZ0=IJ-1
      WRITE(ISHORT,214) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  214 FORMAT(' OPAL95: INTERPOLATE Z2 (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  219 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 219
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 2000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 219
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	  WRITE(ISHORT,*)' OPAL95: Z2 ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG1(IOP)=XX
C
      READ(ILIV95,11,END=299) (R0GR1(I),I=1,NUMD)
      J=0
  288 READ(ILIV95,1,END=277)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 277
      J=J+1
      TGR1(J)=T
      DO 213 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  213 CONTINUE
      GOTO 288
C
  277 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR (Z2)'
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 201  READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 201
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG1(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG1(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR1(I),I=1,NUMD)
      DO 289 J=1,JEND
      READ(ILIV95,1,END=207)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR1(J))THEN
       WRITE(ISHORT,*)T,TGR1(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 233 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  233 CONTINUE
  289 CONTINUE
C
  207 CONTINUE
      NUMTM2=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA1(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C     SEARCH ANOTHER X TABLE
  239 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 239
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 299
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 299
      ELSE
         IF(XX.GT.0.95D0)GO TO 299
      END IF
      IF(XX.LE.XXG1(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 239
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 2000
  299 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM1=IOP
      NUMTM1=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z2 = ',ZZ0
      CALL YLLOC952
      RETURN
   99 CONTINUE
      WRITE(ISHORT, *)' OPAL95: ERROR IN FILE CLOSING'
      STOP 
      END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE LL95TBL3
C DBG 12/95 modified to read in opacity at two different Z
      IMPLICIT REAL*8 (A-H,O-Z)
      include 'dimens'
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMZ=13)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (CONST=11604.5)
      CHARACTER*80 FLIV95
      LOGICAL L2Z
      COMMON /LOPAL95/FLIV95,ILIV95
C GRID ENTRIES FOR TEMPERATURE, AND ABUNDANCE (X)
      COMMON /GLLOT956/TGR(NUMT),XXG(NUMX),R0GR(NUMD)
      COMMON /LLOT956/CAPPA(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /GLLOT957/TGR1(NUMT),XXG1(NUMX),R0GR1(NUMD)
      COMMON /LLOT957/CAPPA1(NUMXT,NUMD),NUMXM1,NUMTM1
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      common/zpoint/zp(11),zpa(11),zinit
C  LOCAL ARRAY
      REAL*8 X(NUMD),XSTO(NUMD,NUMT),ZZG(NUMZ)
      CHARACTER*132 DUMMY
C
      DATA ZZG/0.0D0, 0.0001D0, 0.0003D0, 0.001D0, 0.002D0,
     +         0.004D0, 0.01D0, 0.02D0, 0.03D0,
     +         0.04D0, 0.06D0, 0.08D0, 0.10D0/
C
  1   FORMAT(A)
      NFMT=1
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
C
C     READ IN OPACITY AT ZOPAL951
      ZZ0=zp(7)
      DO 111 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 112
  111 CONTINUE
      IJ=NUMZ
  112 IZ0=IJ-1
      WRITE(ISHORT,114) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  114 FORMAT(' OPAL95: INTERPOLATE Z (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  119 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 119
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 1000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 119
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	 WRITE(ISHORT,*)' OPAL95: Z ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG(IOP)=XX
C
      READ(ILIV95,11,END=199) (R0GR(I),I=1,NUMD)
   11 FORMAT(///,4X,19F7.1,/)
      J=0
  188 READ(ILIV95,1,END=177)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
   12 FORMAT(F4.2,19F7.3)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 177
      J=J+1
      TGR(J)=T
      DO 113 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  113 CONTINUE
      GOTO 188
C
  177 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR '
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 101  READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 101
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR(I),I=1,NUMD)
      DO 189 J=1,JEND
      READ(ILIV95,1,END=107)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR(J))THEN
       WRITE(ISHORT,*)T,TGR(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 133 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  133 CONTINUE
  189 CONTINUE
C
  107 CONTINUE
      NUMTM=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C  SEARCH ANOTHER X TABLE
  139 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 139
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 199
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 199
      ELSE
         IF(XX.GT.0.95D0)GO TO 199
      END IF
      IF(XX.LE.XXG(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 139
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 1000
  199 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM=IOP
      NUMTM=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z = ',ZZ0

      ZZ0=zp(8)
      DO 211 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 212
  211 CONTINUE
      IJ=NUMZ
  212 IZ0=IJ-1
      WRITE(ISHORT,214) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  214 FORMAT(' OPAL95: INTERPOLATE Z2 (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  219 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 219
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 2000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 219
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	  WRITE(ISHORT,*)' OPAL95: Z2 ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG1(IOP)=XX
C
      READ(ILIV95,11,END=299) (R0GR1(I),I=1,NUMD)
      J=0
  288 READ(ILIV95,1,END=277)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 277
      J=J+1
      TGR1(J)=T
      DO 213 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  213 CONTINUE
      GOTO 288
C
  277 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR (Z2)'
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 201  READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 201
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG1(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG1(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR1(I),I=1,NUMD)
      DO 289 J=1,JEND
      READ(ILIV95,1,END=207)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR1(J))THEN
       WRITE(ISHORT,*)T,TGR1(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 233 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  233 CONTINUE
  289 CONTINUE
C
  207 CONTINUE
      NUMTM2=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA1(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C     SEARCH ANOTHER X TABLE
  239 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 239
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 299
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 299
      ELSE
         IF(XX.GT.0.95D0)GO TO 299
      END IF
      IF(XX.LE.XXG1(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 239
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 2000
  299 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM1=IOP
      NUMTM1=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z2 = ',ZZ0
      CALL YLLOC953
      RETURN
   99 CONTINUE
      WRITE(ISHORT, *)' OPAL95: ERROR IN FILE CLOSING'
      STOP 
      END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE LL95TBL4
C DBG 12/95 modified to read in opacity at two different Z
      IMPLICIT REAL*8 (A-H,O-Z)
      include 'dimens'
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMZ=13)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (CONST=11604.5)
      CHARACTER*80 FLIV95
      LOGICAL L2Z
      COMMON /LOPAL95/FLIV95,ILIV95
C GRID ENTRIES FOR TEMPERATURE, AND ABUNDANCE (X)
      COMMON /GLLOT958/TGR(NUMT),XXG(NUMX),R0GR(NUMD)
      COMMON /LLOT958/CAPPA(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /GLLOT959/TGR1(NUMT),XXG1(NUMX),R0GR1(NUMD)
      COMMON /LLOT959/CAPPA1(NUMXT,NUMD),NUMXM1,NUMTM1
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2, 
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      common/zpoint/zp(11),zpa(11),zinit
C  LOCAL ARRAY
      REAL*8 X(NUMD),XSTO(NUMD,NUMT),ZZG(NUMZ)
      CHARACTER*132 DUMMY
C
      DATA ZZG/0.0D0, 0.0001D0, 0.0003D0, 0.001D0, 0.002D0,
     +         0.004D0, 0.01D0, 0.02D0, 0.03D0,
     +         0.04D0, 0.06D0, 0.08D0, 0.10D0/
C
  1   FORMAT(A)
      NFMT=1
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
C
C     READ IN OPACITY AT ZOPAL951
      ZZ0=zp(9)
      DO 111 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 112
  111 CONTINUE
      IJ=NUMZ
  112 IZ0=IJ-1
      WRITE(ISHORT,114) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  114 FORMAT(' OPAL95: INTERPOLATE Z (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  119 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 119
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 1000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 119
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	 WRITE(ISHORT,*)' OPAL95: Z ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG(IOP)=XX
C
      READ(ILIV95,11,END=199) (R0GR(I),I=1,NUMD)
   11 FORMAT(///,4X,19F7.1,/)
      J=0
  188 READ(ILIV95,1,END=177)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
   12 FORMAT(F4.2,19F7.3)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 177
      J=J+1
      TGR(J)=T
      DO 113 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  113 CONTINUE
      GOTO 188
C
  177 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR '
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 101  READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 101
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR(I),I=1,NUMD)
      DO 189 J=1,JEND
      READ(ILIV95,1,END=107)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR(J))THEN
       WRITE(ISHORT,*)T,TGR(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 133 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  133 CONTINUE
  189 CONTINUE
C
  107 CONTINUE
      NUMTM=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C  SEARCH ANOTHER X TABLE
  139 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 139
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 199
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 199
      ELSE
         IF(XX.GT.0.95D0)GO TO 199
      END IF
      IF(XX.LE.XXG(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 139
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 1000
  199 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM=IOP
      NUMTM=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z = ',ZZ0

      ZZ0=zp(10)
      DO 211 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 212
  211 CONTINUE
      IJ=NUMZ
  212 IZ0=IJ-1
      WRITE(ISHORT,214) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  214 FORMAT(' OPAL95: INTERPOLATE Z2 (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  219 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 219
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 2000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 219
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	  WRITE(ISHORT,*)' OPAL95: Z2 ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG1(IOP)=XX
C
      READ(ILIV95,11,END=299) (R0GR1(I),I=1,NUMD)
      J=0
  288 READ(ILIV95,1,END=277)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 277
      J=J+1
      TGR1(J)=T
      DO 213 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  213 CONTINUE
      GOTO 288
C
  277 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR (Z2)'
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 201  READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 201
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG1(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG1(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR1(I),I=1,NUMD)
      DO 289 J=1,JEND
      READ(ILIV95,1,END=207)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR1(J))THEN
       WRITE(ISHORT,*)T,TGR1(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 233 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  233 CONTINUE
  289 CONTINUE
C
  207 CONTINUE
      NUMTM2=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA1(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C     SEARCH ANOTHER X TABLE
  239 READ(ILIV95,1,END=299)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 239
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 299
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 299
      ELSE
         IF(XX.GT.0.95D0)GO TO 299
      END IF
      IF(XX.LE.XXG1(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 239
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 2000
  299 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM1=IOP
      NUMTM1=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z2 = ',ZZ0
      CALL YLLOC954
      RETURN
   99 CONTINUE
      WRITE(ISHORT, *)' OPAL95: ERROR IN FILE CLOSING'
      STOP 
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE LL95TBL5
C DBG 12/95 modified to read in opacity at two different Z
      IMPLICIT REAL*8 (A-H,O-Z)
      include 'dimens'
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMZ=13)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (CONST=11604.5)
      CHARACTER*80 FLIV95
      LOGICAL L2Z
      COMMON /LOPAL95/FLIV95,ILIV95
C GRID ENTRIES FOR TEMPERATURE, AND ABUNDANCE (X)
      COMMON /GLLOT950/TGR(NUMT),XXG(NUMX),R0GR(NUMD)
      COMMON /LLOT950/CAPPA(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2, 
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      common/zpoint/zp(11),zpa(11),zinit
C  LOCAL ARRAY
      REAL*8 X(NUMD),XSTO(NUMD,NUMT),ZZG(NUMZ)
      CHARACTER*132 DUMMY
C
      DATA ZZG/0.0D0, 0.0001D0, 0.0003D0, 0.001D0, 0.002D0,
     +         0.004D0, 0.01D0, 0.02D0, 0.03D0,
     +         0.04D0, 0.06D0, 0.08D0, 0.10D0/
C
  1   FORMAT(A)
      NFMT=1
       zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
C
C     READ IN OPACITY AT ZOPAL951
      ZZ0=zp(11)
      DO 111 IJ=2,NUMZ
      IF(ZZ0.LE.ZZG(IJ))GOTO 112
  111 CONTINUE
      IJ=NUMZ
  112 IZ0=IJ-1
      WRITE(ISHORT,114) ZZ0, ZZG(IZ0),ZZG(IZ0+1)
  114 FORMAT(' OPAL95: INTERPOLATE Z (',F9.6,') BETWEEN:', 2F9.6) 
      OPEN(ILIV95,FILE=FLIV95,STATUS='OLD',ACCESS='SEQUENTIAL')
      IOP=1
      IZ=0
  119 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 119
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
 1000 CONTINUE
      IZ=IZ+1
      IF(IZ.LT.IZ0)THEN
          READ(ILIV95,'(55(/))')
          GOTO 119
      ENDIF
      IF(ZZG(IZ).NE.ZZ)THEN
         WRITE(ISHORT,*)ZZG(IZ),ZZ0
	 WRITE(ISHORT,*)' OPAL95: Z ERROR INCOMPATIBLE TABLE'
         STOP 
      ENDIF
      XXG(IOP)=XX
C
      READ(ILIV95,11,END=199) (R0GR(I),I=1,NUMD)
   11 FORMAT(///,4X,19F7.1,/)
      J=0
  188 READ(ILIV95,1,END=177)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
   12 FORMAT(F4.2,19F7.3)
      IF(X(1).EQ.0.0D0.OR.J.GE.NUMT)GO TO 177
      J=J+1
      TGR(J)=T
      DO 113 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
C     THIS FIX FAILS IF THERE IS A 0.0 OPACITY AT RIGHT EDGE
C     OF TABLE.  "GN93HZ" DOES NOT HAVE THIS SITUATON.
        IF(X(I).EQ.0.0D0)THEN
	   IF (I.LT.NUMD) THEN
	      IF (X(I+1) .EQ. 0.0D0) THEN
                 XSTO(I,J)= 9.999D0
	      ELSE 
	         XSTO(I,J)=X(I)
	      END IF
	   ELSE
	      XSTO(I,J)= 9.999D0
	   END IF
        ELSE
           XSTO(I,J)=X(I)
        ENDIF
  113 CONTINUE
      GOTO 188
C
  177 CONTINUE
      JEND=J
      IF(JEND.LE.0.OR.JEND.LT.NUMT)THEN
       WRITE(ISHORT, *)' OPAL95 OPAC TOTAL T ERROR '
       STOP 
      ENDIF
C
      ZZSTO=ZZ
      FACT1=(ZZ0-ZZSTO)/(ZZG(IZ+1)-ZZSTO)
      FACT2=(ZZ0-ZZG(IZ+1))/(ZZSTO-ZZG(IZ+1))
C
 101  READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 101
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
      IF(ZZG(IZ+1).NE.ZZ.OR.XXG(IOP).NE.XX)THEN
         WRITE(ISHORT,*)XX,XXG(IOP)
         WRITE(ISHORT,*)ZZ0,ZZG(IZ+1)
	 WRITE(ISHORT,*)' OPAL95: OPACITY TABLE ERROR'
         STOP 
      ENDIF
      READ(ILIV95,11,END=99) (R0GR(I),I=1,NUMD)
      DO 189 J=1,JEND
      READ(ILIV95,1,END=107)DUMMY
      READ(DUMMY,12)T,(X(I),I=1,NUMD)
      IF(X(1).EQ.0.0D0)THEN
        WRITE(ISHORT,*)' OPAL95: OPACITY ERROR DIFF. NO. T GRIDS '
        WRITE(ISHORT,*)J, JEND
        STOP
      ENDIF
      IF(T.NE.TGR(J))THEN
       WRITE(ISHORT,*)T,TGR(J)
       WRITE(ISHORT,*)' OPAL95 OPAC T ERROR DIFFERENT T GRIDS'
       STOP
      ENDIF
      DO 133 I=1,NUMD
C DBG 5/96 BUG FIX MUST ENSURE 0.0D0 IS NOT AN ACTUAL OPACITY
        IF(XSTO(I,J).GE.9.998D0)THEN
           XSTO(I,J)= 9.999D0
        ELSE
           IF(X(I).EQ.0.0D0)THEN
	      IF (I.LT.NUMD) THEN
	         IF (X(I+1) .EQ. 0.0D0) THEN
		    XSTO(I,J)= 9.999D0
	         ELSE 
		    XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	         END IF
	      ELSE
	         XSTO(I,J)= 9.999D0
	      END IF
	   ELSE
              XSTO(I,J)=FACT1*X(I)+FACT2*XSTO(I,J)
	   END IF
        ENDIF
  133 CONTINUE
  189 CONTINUE
C
  107 CONTINUE
      NUMTM=JEND
      DO J=1,NUMT
       DO I=1,NUMD
       CAPPA(J+(IOP-1)*NUMT,I)=XSTO(I,J)
       ENDDO
      ENDDO
C
C  SEARCH ANOTHER X TABLE
  139 READ(ILIV95,1,END=199)DUMMY
      IF( DUMMY(NFMT:NFMT+4).NE.'TABLE' ) GO TO 139
      READ(DUMMY,'(36X,F7.4,11X,F7.4)')XX,ZZ
C DBG BUG FIX SEPT 96 THERE IS NOT X=0.95 TABLE FOR Z>0.04
C WAS:IF(XX.GT.0.95D0)GO TO 199
      IF (ZZ0 .GT. 0.04D0) THEN
         IF(XX.GT.0.90D0)GO TO 199
      ELSE
         IF(XX.GT.0.95D0)GO TO 199
      END IF
      IF(XX.LE.XXG(IOP))THEN
          READ(ILIV95,'(60(/))')
          GOTO 139
      ENDIF
C  CONTINUE
      IOP=IOP+1
      IZ=0
      GO TO 1000
  199 CONTINUE
      CLOSE(ILIV95,ERR=99)
      NUMXM=IOP
      NUMTM=NUMT
      WRITE(ISHORT,*)' OPAL95: OPACITY SET FOR Z = ',ZZ0
      CALL YLLOC955
      RETURN
   99 CONTINUE
      WRITE(ISHORT, *)' OPAL95: ERROR IN FILE CLOSING'
      STOP 
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     YLLOC95
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLLOC95
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      DIMENSION C(4,NUMD),XD(NUMD)
      LOGICAL L2Z
      COMMON /GLLOT95/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /GLLOT951/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT95/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT951/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL95/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /INTPL951/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,   
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      DO 101 IX=1,NUMXM
      DO 102 IT=1,NUMTM
       INDEX1=IT+(IX-1)*NUMTM
       JD=0
        IDS=1
        IDF=NUMD
        DO 103 ID=IDS,IDF
          CHKD=GRHOT3(ID)
          CHKO=OPACITY(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 103
          IF(JD.LE.0)THEN
             NDS(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  103   CONTINUE
        NDD(INDEX1)=JD
        IF(JD.LE.1)GO TO 102
        CALL YSPLIN(XD,C,JD)
       DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  102 CONTINUE
  101 CONTINUE
C

      DO 201 IX=1,NUMXM2
      DO 202 IT=1,NUMTM2
       INDEX1=IT+(IX-1)*NUMTM2
       JD=0
        IDS=1
        IDF=NUMD
        DO 203 ID=IDS,IDF
          CHKD=GRHOT32(ID)
          CHKO=OPACITY2(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 203
          IF(JD.LE.0)THEN
             NDS2(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS2 '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  203   CONTINUE
        NDD2(INDEX1)=JD
        IF(JD.LE.1)GO TO 202
        CALL YSPLIN(XD,C,JD)
        DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD2(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  202 CONTINUE
  201 CONTINUE
C
C
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLLOC951
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      DIMENSION C(4,NUMD),XD(NUMD)
      LOGICAL L2Z
      COMMON /GLLOT952/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /GLLOT953/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT952/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT953/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL952/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /INTPL953/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      DO 101 IX=1,NUMXM
      DO 102 IT=1,NUMTM
       INDEX1=IT+(IX-1)*NUMTM
       JD=0
        IDS=1
        IDF=NUMD
        DO 103 ID=IDS,IDF
          CHKD=GRHOT3(ID)
          CHKO=OPACITY(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 103
          IF(JD.LE.0)THEN
             NDS(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  103   CONTINUE
        NDD(INDEX1)=JD
        IF(JD.LE.1)GO TO 102
        CALL YSPLIN(XD,C,JD)
       DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  102 CONTINUE
  101 CONTINUE
C

      DO 201 IX=1,NUMXM2
      DO 202 IT=1,NUMTM2
       INDEX1=IT+(IX-1)*NUMTM2
       JD=0
        IDS=1
        IDF=NUMD
        DO 203 ID=IDS,IDF
          CHKD=GRHOT32(ID)
          CHKO=OPACITY2(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 203
          IF(JD.LE.0)THEN
             NDS2(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS2 '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  203   CONTINUE
        NDD2(INDEX1)=JD
        IF(JD.LE.1)GO TO 202
        CALL YSPLIN(XD,C,JD)
        DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD2(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  202 CONTINUE
  201 CONTINUE
C
C
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLLOC952
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      DIMENSION C(4,NUMD),XD(NUMD)
      LOGICAL L2Z
      COMMON /GLLOT954/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /GLLOT955/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT954/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT955/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL954/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /INTPL955/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      DO 101 IX=1,NUMXM
      DO 102 IT=1,NUMTM
       INDEX1=IT+(IX-1)*NUMTM
       JD=0
        IDS=1
        IDF=NUMD
        DO 103 ID=IDS,IDF
          CHKD=GRHOT3(ID)
          CHKO=OPACITY(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 103
          IF(JD.LE.0)THEN
             NDS(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  103   CONTINUE
        NDD(INDEX1)=JD
        IF(JD.LE.1)GO TO 102
        CALL YSPLIN(XD,C,JD)
       DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  102 CONTINUE
  101 CONTINUE
C

      DO 201 IX=1,NUMXM2
      DO 202 IT=1,NUMTM2
       INDEX1=IT+(IX-1)*NUMTM2
       JD=0
        IDS=1
        IDF=NUMD
        DO 203 ID=IDS,IDF
          CHKD=GRHOT32(ID)
          CHKO=OPACITY2(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 203
          IF(JD.LE.0)THEN
             NDS2(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS2 '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  203   CONTINUE
        NDD2(INDEX1)=JD
        IF(JD.LE.1)GO TO 202
        CALL YSPLIN(XD,C,JD)
        DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD2(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  202 CONTINUE
  201 CONTINUE
C
C
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLLOC953
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      DIMENSION C(4,NUMD),XD(NUMD)
      LOGICAL L2Z
      COMMON /GLLOT956/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /GLLOT957/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT956/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT957/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL956/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /INTPL957/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      DO 101 IX=1,NUMXM
      DO 102 IT=1,NUMTM
       INDEX1=IT+(IX-1)*NUMTM
       JD=0
        IDS=1
        IDF=NUMD
        DO 103 ID=IDS,IDF
          CHKD=GRHOT3(ID)
          CHKO=OPACITY(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 103
          IF(JD.LE.0)THEN
             NDS(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  103   CONTINUE
        NDD(INDEX1)=JD
        IF(JD.LE.1)GO TO 102
        CALL YSPLIN(XD,C,JD)
       DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  102 CONTINUE
  101 CONTINUE
C

      DO 201 IX=1,NUMXM2
      DO 202 IT=1,NUMTM2
       INDEX1=IT+(IX-1)*NUMTM2
       JD=0
        IDS=1
        IDF=NUMD
        DO 203 ID=IDS,IDF
          CHKD=GRHOT32(ID)
          CHKO=OPACITY2(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 203
          IF(JD.LE.0)THEN
             NDS2(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS2 '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  203   CONTINUE
        NDD2(INDEX1)=JD
        IF(JD.LE.1)GO TO 202
        CALL YSPLIN(XD,C,JD)
        DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD2(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  202 CONTINUE
  201 CONTINUE
C
C
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLLOC954
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      DIMENSION C(4,NUMD),XD(NUMD)
      LOGICAL L2Z
      COMMON /GLLOT958/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /GLLOT959/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT958/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /LLOT959/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL958/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /INTPL959/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      DO 101 IX=1,NUMXM
      DO 102 IT=1,NUMTM
       INDEX1=IT+(IX-1)*NUMTM
       JD=0
        IDS=1
        IDF=NUMD
        DO 103 ID=IDS,IDF
          CHKD=GRHOT3(ID)
          CHKO=OPACITY(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 103
          IF(JD.LE.0)THEN
             NDS(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  103   CONTINUE
        NDD(INDEX1)=JD
        IF(JD.LE.1)GO TO 102
        CALL YSPLIN(XD,C,JD)
       DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  102 CONTINUE
  101 CONTINUE
C

      DO 201 IX=1,NUMXM2
      DO 202 IT=1,NUMTM2
       INDEX1=IT+(IX-1)*NUMTM2
       JD=0
        IDS=1
        IDF=NUMD
        DO 203 ID=IDS,IDF
          CHKD=GRHOT32(ID)
          CHKO=OPACITY2(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 203
          IF(JD.LE.0)THEN
             NDS2(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS2 '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  203   CONTINUE
        NDD2(INDEX1)=JD
        IF(JD.LE.1)GO TO 202
        CALL YSPLIN(XD,C,JD)
        DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD2(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  202 CONTINUE
  201 CONTINUE
C
C
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE YLLOC955
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      DIMENSION C(4,NUMD),XD(NUMD)
      LOGICAL L2Z
      COMMON /GLLOT950/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
C      COMMON /GLLOT959/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT950/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
C      COMMON /LLOT959/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL950/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
C      COMMON /INTPL959/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,   
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      DO 101 IX=1,NUMXM
      DO 102 IT=1,NUMTM
       INDEX1=IT+(IX-1)*NUMTM
       JD=0
        IDS=1
        IDF=NUMD
        DO 103 ID=IDS,IDF
          CHKD=GRHOT3(ID)
          CHKO=OPACITY(IT+NUMT*(IX-1),ID)
C         CHECK THE EMPTY REGION
          IF(CHKO.LE.-9.998D0.OR.CHKO.GE.9.998D0)GO TO 103
          IF(JD.LE.0)THEN
             NDS(INDEX1)=ID
C             IF(ID.NE.1)STOP ' CHECK NDS '
          ENDIF
          JD=JD+1
          XD(JD)=CHKD
C         CHECK THE OPACITY VALUE IN THE TABLE
C         C(1,JD)=DLOG10(CHKO)
          C(1,JD)=CHKO
  103   CONTINUE
        NDD(INDEX1)=JD
        IF(JD.LE.1)GO TO 102
        CALL YSPLIN(XD,C,JD)
       DO J=1,JD
        DO I=1,4
         INDEX2=I+(J-1)*4
         CFORD(INDEX1,INDEX2)=C(I,J)
        END DO
        END DO
  102 CONTINUE
  101 CONTINUE
C
      RETURN
      END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     LL4TH95
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THIS IS THE 4TH TABLE OF THE LAWRENCE LIVERMORE OPACITY, USED
C     TO AVOID INTERPOLATION OF X IN ENVELOPE WHERE IT DOES NOT CHANGE
      SUBROUTINE LL4TH95(X)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(4,NUMD)
      LOGICAL L2Z
C     KEEP THE COMPOSITION OF THE 4TH TABLE.
C     THE 4TH TABLE DEBUGGING PURPOSE ONLY
      DIMENSION OPCT4(NUMT,NUMD)
      COMMON /GLLOT95/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT95/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /INTPL95/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /GLLOT951/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT951/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL951/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /LLOT495/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /LLOT4951/XENV42,ZENV42,CFORD42(NUMT,NUM4D),KIPM12
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      common/zpoint/zp(11),zpa(11),zinit
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
      XENV4=X
      ZENV4=ZP(1)
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 1ST Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM1=M1
      DO IM2=1,NUMTM
        M1=KIPM1
        T6=GRIDT(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT3(IM3)
          CALL YLL2D95(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D95(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT3,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD4(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      XENV42=X
      ZENV42=ZP(2)
      CALL FINDEX(GRIDX2,NUMXM2,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM2)M1=NUMXM2-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 2ND Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM12=M1
      DO IM2=1,NUMTM2
        M1=KIPM12
        T6=GRIDT2(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM2
        NDSS=NDS2(INDEX1)
        NDF=NDSS+NDD2(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT32(IM3)
          CALL YLL2D951(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D951(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX2(M1))/(GRIDX2(M1+1)-GRIDX2(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT32,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD42(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     LL4TH951
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THIS IS THE 4TH TABLE OF THE LAWRENCE LIVERMORE OPACITY, USED
C     TO AVOID INTERPOLATION OF X IN ENVELOPE WHERE IT DOES NOT CHANGE
      SUBROUTINE LL4TH951(X)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(4,NUMD)
      LOGICAL L2Z
C     KEEP THE COMPOSITION OF THE 4TH TABLE.
C     THE 4TH TABLE DEBUGGING PURPOSE ONLY
      DIMENSION OPCT4(NUMT,NUMD)
      COMMON /GLLOT952/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT952/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /INTPL952/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /GLLOT953/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT953/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL953/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /LLOT4952/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /LLOT4953/XENV42,ZENV42,CFORD42(NUMT,NUM4D),KIPM12
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,   
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      common/zpoint/zp(11),zpa(11),zinit
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
      XENV4=X
      ZENV4=ZP(3)
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 1ST Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM1=M1
      DO IM2=1,NUMTM
        M1=KIPM1
        T6=GRIDT(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT3(IM3)
          CALL YLL2D952(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D952(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT3,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD4(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      XENV42=X
      ZENV42=ZP(4)
      CALL FINDEX(GRIDX2,NUMXM2,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM2)M1=NUMXM2-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 2ND Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM12=M1
      DO IM2=1,NUMTM2
        M1=KIPM12
        T6=GRIDT2(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM2
        NDSS=NDS2(INDEX1)
        NDF=NDSS+NDD2(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT32(IM3)
          CALL YLL2D953(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D953(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX2(M1))/(GRIDX2(M1+1)-GRIDX2(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT32,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD42(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     LL4TH952
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THIS IS THE 4TH TABLE OF THE LAWRENCE LIVERMORE OPACITY, USED
C     TO AVOID INTERPOLATION OF X IN ENVELOPE WHERE IT DOES NOT CHANGE
      SUBROUTINE LL4TH952(X)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(4,NUMD)
      LOGICAL L2Z
C     KEEP THE COMPOSITION OF THE 4TH TABLE.
C     THE 4TH TABLE DEBUGGING PURPOSE ONLY
      DIMENSION OPCT4(NUMT,NUMD)
      COMMON /GLLOT954/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT954/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /INTPL954/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /GLLOT955/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT955/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL955/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /LLOT4954/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /LLOT4955/XENV42,ZENV42,CFORD42(NUMT,NUM4D),KIPM12
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      common/zpoint/zp(11),zpa(11),zinit
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
      XENV4=X
      ZENV4=ZP(5)
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 1ST Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM1=M1
      DO IM2=1,NUMTM
        M1=KIPM1
        T6=GRIDT(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT3(IM3)
          CALL YLL2D954(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D954(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT3,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD4(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      XENV42=X
      ZENV42=ZP(6)
      CALL FINDEX(GRIDX2,NUMXM2,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM2)M1=NUMXM2-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 2ND Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM12=M1
      DO IM2=1,NUMTM2
        M1=KIPM12
        T6=GRIDT2(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM2
        NDSS=NDS2(INDEX1)
        NDF=NDSS+NDD2(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT32(IM3)
          CALL YLL2D955(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D955(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX2(M1))/(GRIDX2(M1+1)-GRIDX2(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT32,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD42(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      RETURN
      END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     LL4TH953
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THIS IS THE 4TH TABLE OF THE LAWRENCE LIVERMORE OPACITY, USED
C     TO AVOID INTERPOLATION OF X IN ENVELOPE WHERE IT DOES NOT CHANGE
      SUBROUTINE LL4TH953(X)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(4,NUMD)
      LOGICAL L2Z
C     KEEP THE COMPOSITION OF THE 4TH TABLE.
C     THE 4TH TABLE DEBUGGING PURPOSE ONLY
      DIMENSION OPCT4(NUMT,NUMD)
      COMMON /GLLOT956/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT956/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /INTPL956/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /GLLOT957/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT957/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL957/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /LLOT4956/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /LLOT4957/XENV42,ZENV42,CFORD42(NUMT,NUM4D),KIPM12
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      common/zpoint/zp(11),zpa(11),zinit
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
      XENV4=X
      ZENV4=ZP(7)
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 1ST Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM1=M1
      DO IM2=1,NUMTM
        M1=KIPM1
        T6=GRIDT(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT3(IM3)
          CALL YLL2D956(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D956(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT3,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD4(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      XENV42=X
      ZENV42=ZP(8)
      CALL FINDEX(GRIDX2,NUMXM2,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM2)M1=NUMXM2-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 2ND Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM12=M1
      DO IM2=1,NUMTM2
        M1=KIPM12
        T6=GRIDT2(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM2
        NDSS=NDS2(INDEX1)
        NDF=NDSS+NDD2(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT32(IM3)
          CALL YLL2D957(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D957(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX2(M1))/(GRIDX2(M1+1)-GRIDX2(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT32,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD42(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      RETURN
      END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     LL4TH954
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THIS IS THE 4TH TABLE OF THE LAWRENCE LIVERMORE OPACITY, USED
C     TO AVOID INTERPOLATION OF X IN ENVELOPE WHERE IT DOES NOT CHANGE
      SUBROUTINE LL4TH954(X)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(4,NUMD)
      LOGICAL L2Z
C     KEEP THE COMPOSITION OF THE 4TH TABLE.
C     THE 4TH TABLE DEBUGGING PURPOSE ONLY
      DIMENSION OPCT4(NUMT,NUMD)
      COMMON /GLLOT958/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT958/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /INTPL958/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /GLLOT959/GRIDT2(NUMT),GRIDX2(NUMX),GRHOT32(NUMD)
      COMMON /LLOT959/OPACITY2(NUMXT,NUMD),NUMXM2,NUMTM2
      COMMON /INTPL959/ CFORD2(NUMXT,NUM4D),NDS2(NUMXT),NDD2(NUMXT)
      COMMON /LLOT4958/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON /LLOT4959/XENV42,ZENV42,CFORD42(NUMT,NUM4D),KIPM12
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,  
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      common/zpoint/zp(11),zpa(11),zinit
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
      XENV4=X
      ZENV4=ZP(9)
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 1ST Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM1=M1
      DO IM2=1,NUMTM
        M1=KIPM1
        T6=GRIDT(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT3(IM3)
          CALL YLL2D958(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D958(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT3,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD4(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      XENV42=X
      ZENV42=ZP(10)
      CALL FINDEX(GRIDX2,NUMXM2,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM2)M1=NUMXM2-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 2ND Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM12=M1
      DO IM2=1,NUMTM2
        M1=KIPM12
        T6=GRIDT2(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM2
        NDSS=NDS2(INDEX1)
        NDF=NDSS+NDD2(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT32(IM3)
          CALL YLL2D959(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D959(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX2(M1))/(GRIDX2(M1+1)-GRIDX2(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT32,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD42(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     LL4TH955
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     THIS IS THE 4TH TABLE OF THE LAWRENCE LIVERMORE OPACITY, USED
C     TO AVOID INTERPOLATION OF X IN ENVELOPE WHERE IT DOES NOT CHANGE
      SUBROUTINE LL4TH955(X)
      PARAMETER (NUMT=70)
      PARAMETER (NUMD=19)
      PARAMETER (NUMX=9)
      PARAMETER (NUMXT=NUMT*NUMX)
      PARAMETER (NUM4D=4*NUMD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(4,NUMD)
      LOGICAL L2Z
C     KEEP THE COMPOSITION OF THE 4TH TABLE.
C     THE 4TH TABLE DEBUGGING PURPOSE ONLY
      DIMENSION OPCT4(NUMT,NUMD)
      COMMON /GLLOT950/GRIDT(NUMT),GRIDX(NUMX),GRHOT3(NUMD)
      COMMON /LLOT950/OPACITY(NUMXT,NUMD),NUMXM,NUMTM
      COMMON /INTPL950/ CFORD(NUMXT,NUM4D),NDS(NUMXT),NDD(NUMXT)
      COMMON /LLOT4950/XENV4,ZENV4,CFORD4(NUMT,NUM4D),KIPM1
      COMMON/LUNUM/IOWR, ILAST, IFIRST, IRUN, ISTAND, IFERMI,
     1    ICAPPA, IOPAC, IDEBUG, ITRACK, ISHORT, IMILNE, IMODPT,
     2    ISTOR, IOPMOD, IOPENV, IOPATM, ILSTBN, ISTOBN, IDYN,
     3    IUBDAT, ILLDAT, ISNU, ISCOMP, ICOX, IKUR, IFSTBN
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZOPAL952, ZALEX1, ZALEX2, ZKUR1, ZKUR2,   
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z 
      common/zpoint/zp(11),zpa(11),zinit
      zp(6)=zinit
      if(zinit.lt.0.01)then
        zp(5)=0.004
        zp(4)=0.002
        zp(3)=0.001
        zp(2)=0.0003
        zp(1)=0.0001
      else
      do i=1,5
        zp(i)=zinit-(6-i)*0.001
      enddo
c      zp(1)=zinit-0.006
      endif
      do i=7,11
        zp(i)=zinit+(i-6)*0.001
      enddo
      XENV4=X
      ZENV4=ZP(11)
      CALL FINDEX(GRIDX,NUMXM,X,M1)
      IF(M1.LT.0)M1=-M1
      IF(M1.GE.NUMXM)M1=NUMXM-1
      IF(M1.LE.0) THEN
         WRITE(ISHORT, *)' 1ST Z: ERROR IN X GRID'
         STOP 
      END IF
      KIPM1=M1
      DO IM2=1,NUMTM
        M1=KIPM1
        T6=GRIDT(IM2)
        M2=IM2
        INDEX1=IM2+(M1-1)*NUMTM
        NDSS=NDS(INDEX1)
        NDF=NDSS+NDD(INDEX1)-1
        DO IM3=NDSS,NDF
          RHOT3=GRHOT3(IM3)
          CALL YLL2D950(T6,RHOT3,M1,M2,M3,O0,OL0,QOD0,QOT0)
C         LINEAR EXTRAPOLATION IN X
          CALL YLL2D950(T6,RHOT3,M1+1,M2,M3,O1,OL1,QOD1,QOT1)
          GRDNT=(X-GRIDX(M1))/(GRIDX(M1+1)-GRIDX(M1))
          OLF=(OL1-OL0)*GRDNT+OL0
          OF=10.0D0**OLF
          C(1,IM3)=OLF
        END DO
        CALL YSPLIN(GRHOT3,C,NDF)
        DO J=1,NDF
        DO I=1,4
          INDEX2=I+(J-1)*4
          CFORD4(IM2,INDEX2)=C(I,J)
	END DO
	END DO
      END DO
C
C
C
      RETURN
      END
